version: 2.1

orbs:
    browser-tools: circleci/browser-tools@1.2.4
    kubernetes: circleci/kubernetes@1.3.0
    k8s: digitalocean/k8s@0.1.1
    helm: circleci/helm@1.2.0
    envsubst: sawadashota/envsubst@1.1.0

commands:
    install_monorepo:
      steps:
        - run: yarn install
        - run: yarn add -W apollo-datasource-mongodb && yarn add -W mongodb && yarn add -W @rollup/plugin-graphql

    login_docker:
      steps:
        - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin

    test_monorepo:
      steps:
        - run: yarn run tests

    build_ui_command:
      steps:
        - run: yarn run build

    deploy_ui_command:
      steps:
        - run: curl -sL https://firebase.tools | bash
        - run: firebase --token $FIREBASE_TOKEN deploy

jobs:

    build_and_deploy_microservice_analysis:
      docker:
        - image: 'cimg/base:stable'

      working_directory: ~/project

      steps:
        - checkout
        - setup_remote_docker:
            version: 20.10.7
        - login_docker
        - k8s/install
        - k8s/initialize:
            cluster: predecos-kubernetes-cluster
        - run:
            command: docker build -t thinkdeeptech/deep-microservice-analysis:${CIRCLE_BUILD_NUM} -t thinkdeeptech/deep-microservice-analysis:latest --build-arg PREDECOS_MONGODB_CONNECTION_STRING=$PREDECOS_MONGODB_CONNECTION_STRING --build-arg PREDECOS_KAFKA_HOST=$PREDECOS_KAFKA_HOST --build-arg PREDECOS_KAFKA_PORT=$PREDECOS_KAFKA_PORT --build-arg NODE_ENV=$NODE_ENV .
            working_directory: ./packages/deep-microservice-analysis
        - run: docker push thinkdeeptech/deep-microservice-analysis:${CIRCLE_BUILD_NUM}
        - run: docker push thinkdeeptech/deep-microservice-analysis:latest
        - kubernetes/delete-resource:
            now: true
            resource-names: deep-microservice-analysis-deployment
            resource-types: deployments
            wait: true
        - kubernetes/create-or-update-resource:
            get-rollout-status: true
            resource-file-path: ./packages/deep-microservice-analysis/k8s/deep-microservice-analysis-deployment.yml
            resource-name: deployment/deep-microservice-analysis-deployment
            show-kubectl-command: true

    build_and_deploy_microservice_collection:
      docker:
        - image: 'cimg/base:stable'

      working_directory: ~/project

      steps:
        - checkout
        - setup_remote_docker:
            version: 20.10.7
        - login_docker
        - k8s/install
        - k8s/initialize:
            cluster: predecos-kubernetes-cluster
        - run:
            command: docker build -t thinkdeeptech/deep-microservice-collection:${CIRCLE_BUILD_NUM} -t thinkdeeptech/deep-microservice-collection:latest --build-arg PREDECOS_MONGODB_CONNECTION_STRING=$PREDECOS_MONGODB_CONNECTION_STRING --build-arg PREDECOS_TWITTER_BEARER=$PREDECOS_TWITTER_BEARER --build-arg PREDECOS_KAFKA_HOST=$PREDECOS_KAFKA_HOST --build-arg PREDECOS_KAFKA_PORT=$PREDECOS_KAFKA_PORT --build-arg NODE_ENV=$NODE_ENV .
            working_directory: ./packages/deep-microservice-collection
        - run: docker push thinkdeeptech/deep-microservice-collection:${CIRCLE_BUILD_NUM}
        - run: docker push thinkdeeptech/deep-microservice-collection:latest
        - kubernetes/delete-resource:
            now: true
            resource-names: deep-microservice-collection-deployment
            resource-types: deployments
            wait: true
        - kubernetes/create-or-update-resource:
            get-rollout-status: true
            resource-file-path: ./packages/deep-microservice-collection/k8s/deep-microservice-collection-deployment.yml
            resource-name: deployment/deep-microservice-collection-deployment
            show-kubectl-command: true

    build_and_deploy_microservice_configuration:
      docker:
        - image: 'cimg/base:stable'

      working_directory: ~/project

      steps:
        - checkout
        - setup_remote_docker:
            version: 20.10.7
        - login_docker
        - k8s/install
        - k8s/initialize:
            cluster: predecos-kubernetes-cluster
        - run:
            command: docker build -t thinkdeeptech/deep-microservice-configuration:${CIRCLE_BUILD_NUM} -t thinkdeeptech/deep-microservice-configuration:latest --build-arg PREDECOS_MONGODB_CONNECTION_STRING=$PREDECOS_MONGODB_CONNECTION_STRING --build-arg NODE_ENV=$NODE_ENV .
            working_directory: ./packages/deep-microservice-configuration
        - run: docker push thinkdeeptech/deep-microservice-configuration:${CIRCLE_BUILD_NUM}
        - run: docker push thinkdeeptech/deep-microservice-configuration:latest
        - kubernetes/delete-resource:
            now: true
            resource-names: deep-microservice-configuration-deployment
            resource-types: deployments
            wait: true
        - kubernetes/create-or-update-resource:
            get-rollout-status: true
            resource-file-path: ./packages/deep-microservice-configuration/k8s/deep-microservice-configuration-deployment.yml
            resource-name: deployment/deep-microservice-configuration-deployment
            show-kubectl-command: true

    build_and_deploy_microservice_gateway:
      docker:
        - image: 'cimg/base:stable'

      working_directory: ~/project

      steps:
        - checkout
        - setup_remote_docker:
            version: 20.10.7
        - login_docker
        - k8s/install
        - k8s/initialize:
            cluster: predecos-kubernetes-cluster
        - run:
            command: docker build -t thinkdeeptech/deep-microservice-gateway:${CIRCLE_BUILD_NUM} -t thinkdeeptech/deep-microservice-gateway:latest --build-arg PREDECOS_AUTH_AUDIENCE=$PREDECOS_AUTH_AUDIENCE --build-arg PREDECOS_AUTH_JWKS_URI=$PREDECOS_AUTH_JWKS_URI --build-arg PREDECOS_AUTH_ISSUER=$PREDECOS_AUTH_ISSUER --build-arg PREDECOS_MICROSERVICE_ANALYSIS_URL=$PREDECOS_MICROSERVICE_ANALYSIS_URL --build-arg PREDECOS_MICROSERVICE_COLLECTION_URL=$PREDECOS_MICROSERVICE_COLLECTION_URL --build-arg PREDECOS_MICROSERVICE_CONFIGURATION_URL=$PREDECOS_MICROSERVICE_CONFIGURATION_URL --build-arg NODE_ENV=$NODE_ENV .
            working_directory: ./packages/deep-microservice-gateway
        - run: docker push thinkdeeptech/deep-microservice-gateway:${CIRCLE_BUILD_NUM}
        - run: docker push thinkdeeptech/deep-microservice-gateway:latest
        - kubernetes/delete-resource:
            now: true
            resource-names: deep-microservice-gateway-deployment
            resource-types: deployments
            wait: true
        - kubernetes/create-or-update-resource:
            get-rollout-status: true
            resource-file-path: ./packages/deep-microservice-gateway/k8s/deep-microservice-gateway-deployment.yml
            resource-name: deployment/deep-microservice-gateway-deployment
            show-kubectl-command: true

    build_and_deploy_microservice_subscription:
      docker:
        - image: 'cimg/base:stable'

      working_directory: ~/project

      steps:
        - checkout
        - envsubst/install
        - setup_remote_docker:
            version: 20.10.7
        - login_docker
        - k8s/install
        - k8s/initialize:
            cluster: predecos-kubernetes-cluster
        - run:
            command: docker build -t thinkdeeptech/deep-microservice-subscription:${CIRCLE_BUILD_NUM} -t thinkdeeptech/deep-microservice-subscription:latest --build-arg PREDECOS_AUTH_AUDIENCE=$PREDECOS_AUTH_AUDIENCE --build-arg PREDECOS_AUTH_JWKS_URI=$PREDECOS_AUTH_JWKS_URI --build-arg PREDECOS_AUTH_ISSUER=$PREDECOS_AUTH_ISSUER --build-arg PREDECOS_MICROSERVICE_ANALYSIS_URL=$PREDECOS_MICROSERVICE_ANALYSIS_URL --build-arg PREDECOS_MICROSERVICE_COLLECTION_URL=$PREDECOS_MICROSERVICE_COLLECTION_URL --build-arg PREDECOS_MICROSERVICE_CONFIGURATION_URL=$PREDECOS_MICROSERVICE_CONFIGURATION_URL --build-arg PREDECOS_KAFKA_HOST=$PREDECOS_KAFKA_HOST --build-arg PREDECOS_KAFKA_PORT=$PREDECOS_KAFKA_PORT --build-arg NODE_ENV=$NODE_ENV .
            working_directory: ./packages/deep-microservice-subscription
        - run: docker push thinkdeeptech/deep-microservice-subscription:${CIRCLE_BUILD_NUM}
        - run: docker push thinkdeeptech/deep-microservice-subscription:latest
        - kubernetes/delete-resource:
            now: true
            resource-names: deep-microservice-subscription-deployment
            resource-types: deployments
            wait: true
        - run:
            command: envsubst < ./deep-microservice-subscription-deployment.yml | kubectl apply -f -
            working_directory: ./packages/deep-microservice-subscription/k8s

    build_ui:
      docker:
          - image: 'cimg/node:14.17.6'

      working_directory: ~/project

      steps:
          - browser-tools/install-browser-tools
          - checkout
          - install_monorepo
          - test_monorepo
          - build_ui_command


    deploy_kafka:
      docker:
        - image: 'cimg/base:stable'

      working_directory: ~/project

      steps:
        - checkout
        - setup_remote_docker:
            version: 20.10.7
        - login_docker
        - k8s/install
        - k8s/initialize:
            cluster: predecos-kubernetes-cluster
        - helm/install-helm-client:
            version: v3.7.2
        - run:
            name: Add Bitnami Repository
            command: helm repo add bitnami https://charts.bitnami.com/bitnami
        - run:
            name: Update Repositories
            command: helm repo update
        - run:
            name: Delete Kafka
            command: helm delete kafka-latest
        - run:
            name: Install Kafka
            command: helm install kafka-latest bitnami/kafka --set autoCreateTopicsEnable=true

    deploy_mongodb:
      docker:
        - image: 'cimg/base:stable'

      working_directory: ~/project

      steps:
        - checkout
        - setup_remote_docker:
            version: 20.10.7
        - login_docker
        - k8s/install
        - k8s/initialize:
            cluster: predecos-kubernetes-cluster
        - kubernetes/delete-resource:
            now: true
            resource-names: mongodb-deployment
            resource-types: deployments
            wait: true
        - kubernetes/create-or-update-resource:
            get-rollout-status: true
            resource-file-path: ./packages/deep-microservice-collection/k8s/mongodb-deployment.yml
            resource-name: deployment/mongodb-deployment
            show-kubectl-command: true

    # deploy_postgres:
    #   docker:
    #     - image: 'cimg/base:stable'

    #   working_directory: ~/project

    #   steps:
    #     - checkout
    #     - envsubst/install
    #     - setup_remote_docker:
    #         version: 20.10.7
    #     - login_docker
    #     - k8s/install
    #     - k8s/initialize:
    #         cluster: predecos-kubernetes-cluster
    #     - kubernetes/delete-resource:
    #         now: true
    #         resource-names: postgres-deployment
    #         resource-types: deployments
    #         wait: true
    #     - run:
    #         command: envsubst < ./postgres-deployment.yml | kubectl apply -f -
    #         working_directory: ./packages/deep-microservice-analysis/k8s

    deploy_ui:
      docker:
          - image: 'cimg/node:14.17.6'

      working_directory: ~/project

      steps:
          - checkout
          - install_monorepo
          - build_ui_command
          - deploy_ui_command


workflows:

  version: 2

  build_and_deploy_if_master:

    jobs:

      - deploy_kafka:
          filters:
            branches:
              only: master

      - deploy_mongodb:
          filters:
            branches:
              only: master

      # - deploy_postgres:
      #     filters:
      #       branches:
      #         only: master

      - build_and_deploy_microservice_collection:
          requires:
            - deploy_kafka
            - deploy_mongodb
          filters:
            branches:
              only: master

      - build_and_deploy_microservice_analysis:
          requires:
            - build_and_deploy_microservice_collection
            - deploy_kafka
            - deploy_mongodb
          filters:
            branches:
              only: master

      - build_and_deploy_microservice_configuration:
          requires:
            - deploy_mongodb
          filters:
            branches:
              only: master

      - build_and_deploy_microservice_gateway:
          requires:
            - build_and_deploy_microservice_collection
            - build_and_deploy_microservice_analysis
            - build_and_deploy_microservice_configuration
          filters:
            branches:
              only: master

      - build_and_deploy_microservice_subscription:
          requires:
            - build_and_deploy_microservice_collection
            - build_and_deploy_microservice_analysis
            - build_and_deploy_microservice_configuration
            - deploy_kafka
          filters:
            branches:
              only: master

      - build_ui

      - deploy_ui:
          requires:
            - build_and_deploy_microservice_gateway
            - build_and_deploy_microservice_subscription
            - build_ui
          filters:
            branches:
              only: master
